// Code generated by MockGen. DO NOT EDIT.
// Source: aws.go

// Package awsstore is a generated GoMock package.
package awsstore

import (
	reflect "reflect"

	ssm "github.com/aws/aws-sdk-go/service/ssm"
	gomock "github.com/golang/mock/gomock"
)

// MockstorageManager is a mock of storageManager interface.
type MockstorageManager struct {
	ctrl     *gomock.Controller
	recorder *MockstorageManagerMockRecorder
}

// MockstorageManagerMockRecorder is the mock recorder for MockstorageManager.
type MockstorageManagerMockRecorder struct {
	mock *MockstorageManager
}

// NewMockstorageManager creates a new mock instance.
func NewMockstorageManager(ctrl *gomock.Controller) *MockstorageManager {
	mock := &MockstorageManager{ctrl: ctrl}
	mock.recorder = &MockstorageManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockstorageManager) EXPECT() *MockstorageManagerMockRecorder {
	return m.recorder
}

// DeleteParameter mocks base method.
func (m *MockstorageManager) DeleteParameter(input *ssm.DeleteParameterInput) (*ssm.DeleteParameterOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteParameter", input)
	ret0, _ := ret[0].(*ssm.DeleteParameterOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteParameter indicates an expected call of DeleteParameter.
func (mr *MockstorageManagerMockRecorder) DeleteParameter(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteParameter", reflect.TypeOf((*MockstorageManager)(nil).DeleteParameter), input)
}

// GetParameter mocks base method.
func (m *MockstorageManager) GetParameter(input *ssm.GetParameterInput) (*ssm.GetParameterOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetParameter", input)
	ret0, _ := ret[0].(*ssm.GetParameterOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetParameter indicates an expected call of GetParameter.
func (mr *MockstorageManagerMockRecorder) GetParameter(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetParameter", reflect.TypeOf((*MockstorageManager)(nil).GetParameter), input)
}

// PutParameter mocks base method.
func (m *MockstorageManager) PutParameter(input *ssm.PutParameterInput) (*ssm.PutParameterOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutParameter", input)
	ret0, _ := ret[0].(*ssm.PutParameterOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutParameter indicates an expected call of PutParameter.
func (mr *MockstorageManagerMockRecorder) PutParameter(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutParameter", reflect.TypeOf((*MockstorageManager)(nil).PutParameter), input)
}
